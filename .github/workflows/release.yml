name: Release macOS DMG

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      arch:
        description: "Architecture to build (arm64 | x64 | both)"
        required: false
        default: "both"

permissions:
  contents: write

jobs:
  build-mac:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Python 3.11 for node-gyp
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python build deps (setuptools shim for distutils)
        run: |
          python -m pip install --upgrade pip setuptools wheel
          echo "python=$(which python3)" >> $GITHUB_ENV

      - name: Install dependencies
        env:
          npm_config_python: ${{ env.python }}
        run: npm ci

      - name: Build DMG(s) (no publish)
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: 'false' 
        run: |
          ARCH_INPUT="${{ github.event.inputs.arch }}"
          if [ -z "$ARCH_INPUT" ] || [ "$ARCH_INPUT" = "both" ]; then
            FLAGS="--x64 --arm64"
          elif [ "$ARCH_INPUT" = "arm64" ]; then
            FLAGS="--arm64"
          elif [ "$ARCH_INPUT" = "x64" ]; then
            FLAGS="--x64"
          else
            echo "Unknown arch input: $ARCH_INPUT" && exit 1
          fi
          echo "Building for: $FLAGS"
          npx electron-builder --mac dmg $FLAGS --publish never

      # Optional: upload build artifacts for debugging even if publish fails
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dmgs
          path: release/*.dmg

      - name: Publish to GitHub Release (tag builds)
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          # Create release if it doesn't exist; ignore if it does
          gh release create "$TAG" --notes "Automated build for $TAG" || true
          # Upload DMGs; continue even if lacking write permissions
          gh release upload "$TAG" release/*.dmg --clobber || echo "No permission to upload; attach DMGs manually from workflow artifacts."
